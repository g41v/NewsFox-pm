<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
 - Version: MPL 1.1/GPL 2.0/LGPL 2.1
 -
 - The contents of this file are subject to the Mozilla Public License Version
 - 1.1 (the "License"); you may not use this file except in compliance with
 - the License. You may obtain a copy of the License at
 - http://www.mozilla.org/MPL/
 -
 - Software distributed under the License is distributed on an "AS IS" basis,
 - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 - for the specific language governing rights and limitations under the
 - License.
 -
 - The Original Code is NewsFox.
 -
 - The Initial Developer of the Original Code is
 - Ron Pruitt <wa84it@gmail.com>.
 - Portions created by the Initial Developer are Copyright (C) 2007-2011
 - the Initial Developer. All Rights Reserved.
 -
 - Contributor(s):
 -
 - Alternatively, the contents of this file may be used under the terms of
 - either the GNU General Public License Version 2 or later (the "GPL"), or
 - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 - in which case the provisions of the GPL or the LGPL are applicable instead
 - of those above. If you wish to allow use of your version of this file only
 - under the terms of either the GPL or the LGPL, and not to allow others to
 - use your version of this file under the terms of the MPL, indicate your
 - decision by deleting the provisions above and replace them with the notice
 - and other provisions required by the LGPL or the GPL. If you do not delete
 - the provisions above, a recipient may use your version of this file under
 - the terms of any one of the MPL, the GPL or the LGPL.
 -
 - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin/global.css" type="text/css"?>

<window
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	onload="init();">

	<script src="globalfuncs.js"/> 
	<script>
		function init()
		{
			var wm = Components.classes["@mozilla.org/appshell/window-mediator;1"]
					 .getService(Components.interfaces.nsIWindowMediator);
			var enumerator = wm.getEnumerator("navigator:browser");
			var win, tabbrowser, i;
			var exist = false;
			while(enumerator.hasMoreElements())
			{
				win = enumerator.getNext();
				tabbrowser = win.gBrowser;
				tabs = tabbrowser.tabContainer.childNodes;
				for (i = 0; i &lt; tabs.length; ++i)
				{
					var browser = tabbrowser.getBrowserForTab(tabs[i]);
					if("chrome://newsfox/content/newsfox.xul" == browser.contentDocument.location)
					{
						tabbrowser.selectedTab = tabs[i];
						exist = true;
					}
				}
			}
			var tmp = location.href.split("?");
			var feedUrl = unescape(tmp[1]);
			NFsetPref("internal.addUrl", "str", feedUrl);	
			if (exist)
				window.close();
			else
				location.href = "chrome://newsfox/content/newsfox.xul";
		}
	</script>
</window>

